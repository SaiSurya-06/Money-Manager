# Generated by Django 5.0.14 on 2025-09-27 12:35

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('period', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('custom', 'Custom Period')], default='monthly', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_budget', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('spent_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('remaining_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('alert_percentage', models.IntegerField(default=80, help_text='Send alert when this percentage of budget is spent', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('alert_sent', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('family_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='budgets', to='core.familygroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'budgets_budget',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BudgetGoal',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('goal_type', models.CharField(choices=[('savings', 'Savings Goal'), ('debt_payoff', 'Debt Payoff'), ('purchase', 'Purchase Goal'), ('emergency_fund', 'Emergency Fund'), ('retirement', 'Retirement'), ('other', 'Other')], max_length=20)),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('current_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('target_date', models.DateField()),
                ('priority', models.IntegerField(default=1, help_text='Priority level (1=Low, 5=High)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('is_active', models.BooleanField(default=True)),
                ('is_achieved', models.BooleanField(default=False)),
                ('achieved_date', models.DateField(blank=True, null=True)),
                ('family_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='budget_goals', to='core.familygroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budget_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'budgets_budget_goal',
                'ordering': ['-priority', 'target_date'],
            },
        ),
        migrations.CreateModel(
            name='BudgetAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('alert_type', models.CharField(choices=[('budget_exceeded', 'Budget Exceeded'), ('budget_warning', 'Budget Warning'), ('goal_deadline', 'Goal Deadline Approaching'), ('goal_achieved', 'Goal Achieved')], max_length=20)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('budget', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='budgets.budget')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budget_alerts', to=settings.AUTH_USER_MODEL)),
                ('goal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='budgets.budgetgoal')),
            ],
            options={
                'db_table': 'budgets_budget_alert',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BudgetCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allocated_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('spent_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='budgets.budget')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.category')),
            ],
            options={
                'db_table': 'budgets_budget_category',
                'unique_together': {('budget', 'category')},
            },
        ),
    ]
